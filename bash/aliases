# bash/aliases
# ---
# https://github.com/rafi/.config

# Carry over aliases to the root account when using sudo
alias sudo='sudo '

# Make watch work with aliases
alias watch='watch '

# Useful shortcuts
alias c=clear
alias cal='task cal'
alias start='{ test -f .tmuxp.* && tmuxp load -y .; } || \
	{ tmuxp ls | fzf | xargs tmuxp load -y; }'

# Lists ---------------------------------------------------- l for list -- {{{
LSCMD='ls'
if [[ "$OSTYPE" == "darwin"* ]]; then
	# Use GNU tools on OSX instead of BSD
	hash gdircolors 2>/dev/null && alias dircolors='gdircolors'
	hash gfind 2>/dev/null && alias find='gfind'
	hash gsort 2>/dev/null && alias sort='gsort'
	hash gstat 2>/dev/null && alias stat='gstat'
	hash gls 2>/dev/null && LSCMD='gls'
fi

# Listing directory contents
alias ls="LC_COLLATE=C ${LSCMD} --color=auto --group-directories-first"
unset LSCMD
alias l='ls -CFa'
alias ll='ls -alF'
alias llh='ls -alFh'
alias lld='ls -Gal --color=always | grep ^d --colour=never'

# }}}
# Editor --------------------------------------------------- e for edit -- {{{
alias e='tmux split-window -h "$EDITOR"'

# Neo/vim shortcuts, use Neovim by default
if hash nvim 2>/dev/null; then
	alias vim=nvim
	alias vless="nvim -u $PREFIX/share/nvim/runtime/macros/less.vim"
	alias suvim='sudo -E nvim'
	alias oldvim="VIMINIT='let \$MYVIMRC=\"\$XDG_CONFIG_HOME/nvim/vimrc\" | source \$MYVIMRC' $PREFIX/bin/vim"
else
	alias vless="vim -u $PREFIX/share/vim/vim74/macros/less.vim"
	alias suvim='sudo -E vim'
fi
alias v='vim $(fzf)'
alias vi=vim
alias vimdiff='vim -d'
alias testvim="VIMINIT='let \$MYVIMRC=\"\$HOME/box/testvim/init.vim\" | source \$MYVIMRC' nvim"

# }}}
# Grepping ------------------------------------------------- p for grep -- {{{
if hash rg 2>/dev/null; then
	# Use https://github.com/BurntSushi/ripgrep by default
	alias p=rg
elif hash ag 2>/dev/null; then
	# Fallback to https://github.com/ggreer/the_silver_searcher
	alias p=ag
else
	# Fallback to slow grep
	alias p=grep
fi
# Use https://github.com/cykerway/complete-alias for bash alias completion
if [ "$(type -t _complete_alias)" = function ]; then
	complete -F _complete_alias p
fi

# Productive defaults for grep and tree
alias grep='grep --color=auto --exclude-dir=.git'
alias tree='tree -F --dirsfirst -a -I ".git|.hg|.svn|__pycache__|.mypy_cache|.pytest_cache|*.egg-info|.sass-cache|.DS_Store" --ignore-case'
alias tree2='tree -L 2'
alias tree3='tree -L 3'

# Head and tail will show as much possible without scrolling
hash ghead 2>/dev/null && alias cath='ghead -n $((${LINES:-12}-4))'
hash gtail 2>/dev/null && alias catt='gtail -n $((${LINES:-12}-4)) -s.1'

# Use colordiff by default
hash colordiff 2>/dev/null && alias diff=colordiff

# }}}
# Explorer --------------------------------------------- = for explorer -- {{{

if hash lf 2>/dev/null; then
	# Use https://github.com/gokcehan/lf by default
	=() { lf; }
elif hash ranger 2>/dev/null; then
	# Fallback to https://github.com/ranger/ranger
	=() { ranger; }
fi

# Easier directory navigation
alias ..='cd ..'
alias ...='cd ../../'
alias ....='cd ../../../'
alias .....='cd ../../../../'
alias -- -="cd -"

# }}}
# Jump around ------------------------------------------- z for jumping -- {{{
alias cdf='cd "$(dirname "$(fzf)")"'

if [ "$(type -t _zlua)" = function ]; then
	alias zz='z -c'      # restrict matches to subdirs of $PWD
	alias zi='z -I'      # use fzf to select in multiple matches
	alias zb='z -b'      # quickly cd to the parent directory
	alias zh='z -I -t .' # interactive mru with fzf
fi

# }}}
# File find ------------------------------------------------ f for find -- {{{
if ! hash fd 2>/dev/null; then
	# Slow
	alias f='find . -iname '
else
	# Use https://github.com/sharkdp/fd
	alias f=fd
fi
# Use https://github.com/cykerway/complete-alias for bash alias completion
if [ "$(type -t _complete_alias)" = function ]; then
	complete -F _complete_alias f
fi

# }}}
# Git ------------------------------------------------------ g for git --- {{{
alias g=git
alias gb='git branch'
alias gc='git checkout'
alias gcb='git checkout -b'
alias gcd='cd "$(git rev-parse --show-toplevel)"'
alias gd='git diff'
alias gds='git diff --cached'
alias gfl='git fetch --prune && git lg -15'
alias gf='git fetch --prune'
alias gfa='git fetch --all --tags --prune'
alias gap='git add -p'
alias gai='git add -i'
alias gs='git status -sb'
alias gl='git lg -15'
alias gll='git lg'
alias gld='git lgd -15'
alias glf='git-foresta --all --style=10 | less -RS'

# Attach alias tab-completion to git completion functions
if type _git &> /dev/null; then
	complete -o default -o nospace -F _git g
	if [ "$(type -t __git_complete)" = function ]; then
		__git_complete gb _git_branch gb
		__git_complete gc _git_checkout gc
		__git_complete gc _git_checkout gcb
		__git_complete gd _git_diff gd
		__git_complete gd _git_diff gds
		__git_complete gf _git_fetch gf
		__git_complete gf _git_fetch gfa
		__git_complete gap _git_add gap
		__git_complete gs _git_status gs
		__git_complete gl _git_log gl
		__git_complete gl _git_log gll
		__git_complete gl _git_log gld
	fi
fi

# }}}
# Docker ------------------------------------------------- d for docker -- {{{
alias d=docker
alias dk=docker-compose
alias dps='docker ps --format "table {{.Names}}\\t{{.Image}}\\t{{.Status}}\\t{{ .Ports }}\\t{{.RunningFor}}\\t{{.Command}}\\t{{ .ID }}" | cut -c-$(tput cols)'
alias dls='docker ps -a --format "table {{.Names}}\\t{{.Image}}\\t{{.Status}}\\t{{ .Ports }}\\t{{.RunningFor}}\\t{{.Command}}\\t{{ .ID }}" | cut -c-$(tput cols)'
alias dim='docker images --format "table {{.Repository}}\\t{{.Tag}}\\t{{.ID}}\\t{{.Size}}\\t{{.CreatedSince}}"'
alias dip='docker inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}"'
alias dgc='docker rmi $(docker images -qf "dangling=true")'
alias dvc='docker volume ls -qf dangling=true | xargs docker volume rm'
alias dtop='docker stats $(docker ps --format="{{.Names}}")'
alias dnet='docker network ls && echo && docker inspect --format "{{\$e := . }}{{with .NetworkSettings}} {{\$e.Name}}
{{range \$index, \$net := .Networks}}  - {{\$index}}	{{.IPAddress}}
{{end}}{{end}}" $(docker ps -q)'
alias dtag='docker inspect --format "{{.Name}}
{{range \$index, \$label := .Config.Labels}}  - {{\$index}}={{\$label}}
{{end}}" $(docker ps -q)'

# Use https://github.com/cykerway/complete-alias for bash alias completion
if [ "$(type -t _complete_alias)" = function ]; then
	complete -F _complete_alias d
fi

# }}}
# Kubernetes ----------------------------------------- k for kubernetes -- {{{
alias k=kubectl
alias kc=kubectx
alias kg='kubectl get'
alias ke='kubectl edit'
alias kr='kubectl run'
alias kexec='kubectl fuzzy exec -APit --'
alias kdescribe='kubectl fuzzy describe -AP'
alias klog='kubectl fuzzy logs -AP'

# Kubernetes: attach k alias to kubectl completion function
complete -o default -F __start_kubectl k
# Use https://github.com/cykerway/complete-alias for bash alias completion
if [ "$(type -t _complete_alias)" = function ]; then
	complete -F _complete_alias kc
	complete -F _complete_alias kg
	complete -F _complete_alias ke
	complete -F _complete_alias kr
fi

# }}}
# Processes ------------------------------------------- p for processes -- {{{
alias process='ps -ax'
alias psk='ps -xam -o "pid,user,%cpu,%mem,command" | fzf | cut -d " " -f1 | xargs -o kill'
alias pst='pstree -g 3 -ws'

# }}}
# Writing ------------------------------------------------- m for memos -- {{{
# See: https://github.com/rafi/memo-sh
alias m=memo

# }}}
# XDG conformity --------------------------------------------------------- {{{
# See: https://wiki.archlinux.org/index.php/XDG_Base_Directory
alias tmux='tmux -f "$XDG_CONFIG_HOME/tmux/config"'
alias mysql='mysql --defaults-extra-file="$XDG_CONFIG_HOME/mysql/config"'
alias mutt='mutt -F "$XDG_CONFIG_HOME"/mutt/config'
alias weechat='weechat --dir "$XDG_CONFIG_HOME/weechat/"'
alias gdrive='gdrive -c "$XDG_CONFIG_HOME/gdrive"'
alias cpan='cpan -j "$XDG_CONFIG_HOME/cpan/config.pm"'
alias gcal='gcalcli --configFolder "$XDG_CONFIG_HOME/gcalcli"'
alias redshift='redshift -c "$XDG_CONFIG_HOME/redshift/config"'
alias rtorrent='rtorrent -n -o import="$XDG_CONFIG_HOME/rtorrent/config.rc"'

# }}}
# Storage ---------------------------------------------------------------- {{{
alias dut='du -hsx * | sort -rh | head -10'
alias duz='du -hsx * | sort -rh | fzf | awk "{print \$2}"'
alias dum='df -hT -x devtmpfs -x tmpfs'

# }}}
# Misc ------------------------------------------------------------------- {{{
alias fontcache='fc-cache -f -v'
alias fontfind='fc-list : family style'
alias freq='cut -f1 -d" " "$HISTFILE" | sort | uniq -c | sort -nr | head -n 30'
alias sniff="sudo ngrep -d 'en1' -t '^(GET|POST) ' 'tcp and port 80'"
alias multiopen='while read i; do open "$i"; done <<<'
alias volup='amixer set Master playback 3dB+'
alias voldown='amixer set Master playback 3dB-'
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1]);"'
alias ipinfo='curl -s ipinfo.io | jq .'
alias weather='curl -s v2.wttr.in/Tel_Aviv'
alias panic="curl -s https://corona-stats.online?format=json | jq '.data[] | select(.countryCode==\"IL\")'"
alias ungzip='gzip -d'
alias untar='tar xvf'
alias ngrok='ngrok --authtoken="$(pass tokens/ngrok)"'
alias aspell='aspell -c -l en_US'
alias ttycast="ttyd -p 8888 bash -c 'tmux new-session -d -s cast \; split-window -d \; attach -t cast'"
alias ttycast-this="tmux split-window \'ttyd -p 8888 bash -c \'tmux a\'\'"
alias subdl='subliminal download -l en -d "$XDG_CACHE_HOME/subtitles"'

# }}}
# OS Specific Network and Filesystem ------------------------------------- {{{

# IP addresses
alias ips="ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"
alias iplocal="ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'"

if [ "$(uname -s)" = "Darwin" ]; then
	alias netinfo="networksetup -listallnetworkservices | sed '1d' | fzf | xargs networksetup -getinfo"
	# alias ipremote=""  # TODO

	# Show active network interfaces
	alias ifactive="ifconfig | pcregrep -M -o '^[^\t:]+:([^\n]|\n\t)*status: active'"

	# Flush Directory Service cache
	alias flush="dscacheutil -flushcache && killall -HUP mDNSResponder"

	# Lock the screen (when going Away From Keyboard)
	alias afk="/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend"

	# Recursively delete `.DS_Store` files
	alias cleanup="find . -type f -name '*.DS_Store' -ls -delete"

	# Empty the Trash on all mounted volumes and the main HDD.
	# Also, clear Apple’s System Logs to improve shell startup speed.
	# Finally, clear download history from quarantine. https://mths.be/bum
	alias emptytrash="sudo rm -rfv /Volumes/*/.Trashes; \
		sudo rm -rfv ~/.Trash; \
		sudo rm -rfv /private/var/log/asl/*.asl; \
		sqlite3 ~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV* 'delete from LSQuarantineEvent'"

else
	# IP addresses
	alias ipremote="ip route get 1 | awk '{print \$NF;exit}'"

	# Show active network interfaces
	# alias ifactive=""  # TODO

	# Flush Directory Service cache
	# alias flush=""  # TODO

	# Lock the screen (Away From Keyboard)
	# alias afk=""  # TODO
	# alias afk='gnome-screensaver-command --lock'

	# open, pbcopy and pbpaste on Linux
	if [ -z "$(command -v pbcopy)" ]; then
		if [ -n "$(command -v xclip)" ]; then
			alias pbcopy="xclip -selection clipboard"
			alias pbpaste="xclip -selection clipboard -o"
		elif [ -n "$(command -v xsel)" ]; then
			alias pbcopy="xsel --clipboard --input"
			alias pbpaste="xsel --clipboard --output"
		fi
	fi
	if [ -e /usr/bin/xdg-open ]; then
		alias open="xdg-open"
	fi
fi
# }}}
#  vim: set ft=sh fdm=marker ts=2 sw=2 tw=80 noet :
